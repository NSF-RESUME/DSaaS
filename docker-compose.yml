services:
  web:
    build:
      dockerfile: ./Dockerfiles/Dockerfile.server.dev
    ports:
      - "5001:80"
    environment:
      - DATABASE_PORT=5432
      - DATABASE_PASSWORD=postgres
      - DATABASE_USER=postgres
      - DATABASE_HOST=osprey-postgres-database-1 # NOTE: Make sure it is the same as the database-name
      - DATABASE_NAME=osprey_development
      - FLASK_APP=server.py
      - GLOBUS_WORKER_UUID=7591d0fb-3d12-4ff8-b8fb-7a51146c4871
      - PROXYSTORE_ENDPOINT_UUID=f7da4f10-4fba-4d32-8b59-cc199b93acb7
      - WORKFLOW_DOWNLOAD_FUNCTION=42c28e4c-eb4b-407d-a4a4-6c12fde1187e
      - WORKFLOW_COMMIT_FUNCTION=9f21ae75-69d5-4b4e-af20-33ba87411494
    volumes:
      - ./osprey/server:/app/osprey/server
    depends_on:
        - postgres-database
        - globus-endpoint
        - globus-proxystore

  postgres-database:
    restart: always
    image: postgres:15.3
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - osprey-postgres-data:/var/lib/postgresql/data

  globus-endpoint:
    build:
        dockerfile: ./Dockerfiles/Dockerfile.endpoint.dev
    volumes:
      - osprey-endpoint-data:/root/.globus_compute
      - ./osprey/worker:/app/osprey/worker

    # TODO: Make a different user
    environment:
      - DATABASE_PORT=5432
      - DATABASE_PASSWORD=postgres
      - DATABASE_USER=postgres
      - DATABASE_HOST=osprey-postgres-database-1
      - DATABASE_NAME=osprey_development

  globus-proxystore:
    build:
      dockerfile: ./Dockerfiles/Dockerfile.proxystore.dev
    volumes:
      - osprey-proxystore-data:/root/.local/share/proxystore
    ports:
      - "8765:8765"

volumes:
  osprey-postgres-data:
    external: true
  osprey-endpoint-data:
    external: true
  osprey-proxystore-data:
    external: true